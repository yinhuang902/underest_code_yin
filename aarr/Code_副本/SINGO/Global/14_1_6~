push!(LOAD_PATH, ENV["SINGODIR"])
using Plasmo, Ipopt,BARON,SCIP
using JuMP
include("../bb.jl")


function createModel()
m=Model()
@variable(m, -1<= x1 <= 1)
@variable(m, -1<= x2 <= 1)
@variable(m, -1<= x3 <= 1)
@variable(m, -1<= x4 <= 1)
@variable(m, -1<= x5 <= 1)
@variable(m, -1<= x6 <= 1)
@variable(m, -1<= x7 <= 1)
@variable(m, -1<= x8 <= 1)
@variable(m, x9)

@constraint(m, 0.004731*x1*x3-0.1238*x1-0.3578*x2*x3-0.001637*x2-0.9338*x4+x7-x9 <= 0.3571)
@constraint(m, 0.1238*x1-0.004731*x1*x3+0.3578*x2*x3+0.001637*x2+0.9338*x4-x7-x9 <= -0.3571)
@constraint(m, 0.2238*x1*x3+0.2638*x1+0.7623*x2*x3-0.07745*x2-0.6734*x4-x7-x9 <= 0.6022)
@constraint(m, (-0.2238*x1*x3)-0.2638*x1-0.7623*x2*x3+0.07745*x2+0.6734*x4+x7-x9 <= -0.6022)
@constraint(m, x6*x8+0.3578*x1+0.004731*x2-x9 <= 0)
@constraint(m, -x6*x8-0.3578*x1-0.004731*x2-x9 <= 0)
@constraint(m, -0.7623*x1+0.2238*x2 == -0.3461)
@constraint(m, (x1)^2+(x2)^2-x9 <= 1)
@constraint(m, (-((x1)^2))-((x2)^2)-x9 <= -1)
@constraint(m, ((x3)^2)+((x4)^2)-x9 <= 1)
@constraint(m, (-((x3)^2))-((x4)^2)-x9 <= -1)
@constraint(m, ((x5)^2)+((x6)^2)-x9 <= 1)
@constraint(m, (-((x5)^2))-((x6)^2)-x9 <= -1)
@constraint(m, ((x7)^2)+((x8)^2)-x9 <= 1)
@constraint(m, (-((x7)^2))-((x8)^2)-x9 <= -1)
@objective(m, Min, x9)
    return m
end


P = RandomStochasticModel(createModel, 100, 2, 2)  #RandomStochasticModel(createModel, nscen=10, nfirst=5, nparam=5)
m = copyStoModel(P)
branch_bound(m)


m= extensiveSimplifiedModel(P)
m.solver = SCIPSolver("limits/gap", mingap, "limits/absgap", mingap, "limits/time", 43200.0)
solve(m)


m= extensiveSimplifiedModel(m)
m = copyNLModel(m)
m.solver = BaronSolver()
push!(m.solver.options, (:EpsA, mingap), (:EpsR, mingap),(:MaxTime, 43200.0))
solve(m)
