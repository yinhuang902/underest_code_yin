WARNING: Method definition getData(JuMP.Model) in module Main at /home/cao27/SINGO/Plasmo.jl/src/NetParPipsNlp.jl:65 overwritten at /home/cao27/SINGO/Plasmo.jl/src/NetIpopt.jl:21.
WARNING: using JuMP.getdual in module Main conflicts with an existing identifier.
WARNING: Method definition findnode(Any, Any) in module Main at /home/cao27/SINGO/Global/../preprocess.jl:312 overwritten at /home/cao27/SINGO/Global/../preprocessex.jl:369.

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

feasible solution found by trivial heuristic after 0.1 seconds, objective value 0.000000e+00
presolving:
(round 1, fast)       6000 del vars, 2000 del conss, 0 add conss, 9786 chg bounds, 0 chg sides, 0 chg coeffs, 1 upgd conss, 0 impls, 0 clqs
(round 2, fast)       6000 del vars, 4661 del conss, 0 add conss, 9787 chg bounds, 0 chg sides, 0 chg coeffs, 1 upgd conss, 0 impls, 0 clqs
presolving (3 rounds: 3 fast, 1 medium, 1 exhaustive):
 6000 deleted vars, 4661 deleted constraints, 0 added constraints, 9788 tightened bounds, 0 added holes, 0 changed sides, 0 changed coefficients
 0 implications, 0 cliques
presolved problem has 5003 variables (0 bin, 0 int, 0 impl, 5003 cont) and 4340 constraints
   4339 constraints of type <linear>
      1 constraints of type <quadratic>
Presolving Time: 0.72

  node  | left  |LP iter|LP it/n| mem |  dualbound   | primalbound  |  gap   
t     1 |     0 |     0 |     - |  30M|      --      |-6.000000e+03 |    Inf 
      1 |     0 |  2593 |     - |  35M|-1.477658e+04 |-6.000000e+03 | 146.28%
q     1 |     0 |  2593 |     - |  35M|-1.477658e+04 |-1.125203e+04 |  31.32%
      1 |     0 |  2593 |     - |  35M|-1.477658e+04 |-1.125203e+04 |  31.32%
      1 |     2 |  2593 |     - |  35M|-1.477658e+04 |-1.125203e+04 |  31.32%
y    72 |    71 |  4019 |  20.1 |  42M|-1.477658e+04 |-1.285795e+04 |  14.92%
    100 |    93 |  8507 |  59.7 |  45M|-1.477658e+04 |-1.285795e+04 |  14.92%
    200 |   169 | 22147 |  98.3 |  54M|-1.477658e+04 |-1.285795e+04 |  14.92%
    300 |   243 | 36899 | 114.7 |  62M|-1.477658e+04 |-1.285795e+04 |  14.92%
    400 |   333 | 49008 | 116.3 |  70M|-1.477566e+04 |-1.285795e+04 |  14.91%
    500 |   433 | 60954 | 117.0 |  82M|-1.477542e+04 |-1.285795e+04 |  14.91%
    600 |   533 | 69633 | 111.9 |  92M|-1.450648e+04 |-1.285795e+04 |  12.82%
y   612 |   543 | 69644 | 109.7 |  93M|-1.450648e+04 |-1.292915e+04 |  12.20%
    700 |   633 | 70404 |  97.0 | 103M|-1.450648e+04 |-1.292915e+04 |  12.20%
    800 |   733 | 71149 |  85.8 | 108M|-1.450648e+04 |-1.292915e+04 |  12.20%
  node  | left  |LP iter|LP it/n| mem |  dualbound   | primalbound  |  gap   
    900 |   833 | 71874 |  77.1 | 120M|-1.450648e+04 |-1.292915e+04 |  12.20%
y   913 |   844 | 71898 |  76.0 | 121M|-1.450648e+04 |-1.294673e+04 |  12.05%
   1000 |   933 | 72642 |  70.1 | 133M|-1.450648e+04 |-1.294673e+04 |  12.05%
   1100 |  1033 | 73421 |  64.4 | 138M|-1.450648e+04 |-1.294673e+04 |  12.05%
   1200 |  1133 | 74171 |  59.7 | 153M|-1.450648e+04 |-1.294673e+04 |  12.05%
   1300 |  1233 | 74961 |  55.7 | 158M|-1.450648e+04 |-1.294673e+04 |  12.05%
   1400 |  1333 | 75753 |  52.3 | 163M|-1.450648e+04 |-1.294673e+04 |  12.05%
   1500 |  1433 | 76208 |  49.1 | 179M|-1.450648e+04 |-1.294673e+04 |  12.05%
   1600 |  1533 | 76940 |  46.5 | 184M|-1.450648e+04 |-1.294673e+04 |  12.05%
y  1669 |  1600 | 77368 |  44.8 | 188M|-1.450648e+04 |-1.295057e+04 |  12.01%
   1700 |  1633 | 77730 |  44.2 | 190M|-1.450648e+04 |-1.295057e+04 |  12.01%
   1800 |  1733 | 78870 |  42.4 | 208M|-1.450648e+04 |-1.295057e+04 |  12.01%
   1900 |  1833 | 79995 |  40.8 | 214M|-1.450648e+04 |-1.295057e+04 |  12.01%
y  1933 |  1864 | 80055 |  40.1 | 215M|-1.450648e+04 |-1.296314e+04 |  11.91%
   2000 |  1933 | 80806 |  39.1 | 219M|-1.450648e+04 |-1.296314e+04 |  11.91%
  node  | left  |LP iter|LP it/n| mem |  dualbound   | primalbound  |  gap   
   2100 |  2033 | 81919 |  37.8 | 240M|-1.450648e+04 |-1.296314e+04 |  11.91%
   2200 |  2133 | 84032 |  37.0 | 246M|-1.450452e+04 |-1.296314e+04 |  11.89%
   2300 |  2233 | 86151 |  36.3 | 251M|-1.450241e+04 |-1.296314e+04 |  11.87%
   2400 |  2333 | 88233 |  35.7 | 256M|-1.450027e+04 |-1.296314e+04 |  11.86%
   2500 |  2433 | 90282 |  35.1 | 281M|-1.449829e+04 |-1.296314e+04 |  11.84%
y  2582 |  2513 | 91373 |  34.4 | 285M|-1.449740e+04 |-1.296397e+04 |  11.83%
   2600 |  2533 | 92377 |  34.5 | 286M|-1.449626e+04 |-1.296397e+04 |  11.82%
   2700 |  2633 | 93481 |  33.7 | 291M|-1.449512e+04 |-1.296397e+04 |  11.81%
   2800 |  2733 | 95523 |  33.2 | 297M|-1.449341e+04 |-1.296397e+04 |  11.80%
y  2884 |  2815 | 96606 |  32.6 | 301M|-1.449257e+04 |-1.296514e+04 |  11.78%
   2900 |  2833 | 97600 |  32.8 | 302M|-1.449173e+04 |-1.296514e+04 |  11.77%
   3000 |  2933 | 98790 |  32.1 | 331M|-1.449056e+04 |-1.296514e+04 |  11.77%
q  3070 |  3003 | 99965 |  31.7 | 335M|-1.448938e+04 |-1.298144e+04 |  11.62%
y  3071 |  3002 | 99965 |  31.7 | 334M|-1.448938e+04 |-1.298144e+04 |  11.62%
   3100 |  3033 |100919 |  31.7 | 336M|-1.448820e+04 |-1.298144e+04 |  11.61%
  node  | left  |LP iter|LP it/n| mem |  dualbound   | primalbound  |  gap   
   3200 |  3133 |102231 |  31.1 | 341M|-1.448702e+04 |-1.298144e+04 |  11.60%
   3300 |  3233 |103564 |  30.6 | 346M|-1.448621e+04 |-1.298144e+04 |  11.59%
   3400 |  3333 |105641 |  30.3 | 352M|-1.448382e+04 |-1.298144e+04 |  11.57%
   3500 |  3433 |106691 |  29.8 | 357M|-1.448262e+04 |-1.298144e+04 |  11.56%
   3600 |  3533 |107760 |  29.2 | 390M|-1.448182e+04 |-1.298144e+04 |  11.56%
   3700 |  3633 |109451 |  28.9 | 395M|-1.448062e+04 |-1.298144e+04 |  11.55%
   3800 |  3733 |110789 |  28.5 | 401M|-1.447825e+04 |-1.298144e+04 |  11.53%
   3900 |  3833 |111850 |  28.0 | 406M|-1.447748e+04 |-1.298144e+04 |  11.52%
   4000 |  3933 |113119 |  27.6 | 411M|-1.447630e+04 |-1.298144e+04 |  11.52%
   4100 |  4033 |115036 |  27.4 | 416M|-1.413545e+04 |-1.298144e+04 |   8.89%
   4200 |  4133 |115185 |  26.8 | 421M|-1.413545e+04 |-1.298144e+04 |   8.89%
   4300 |  4233 |115360 |  26.2 | 460M|-1.413545e+04 |-1.298144e+04 |   8.89%
   4400 |  4333 |115505 |  25.7 | 465M|-1.413545e+04 |-1.298144e+04 |   8.89%
   4500 |  4433 |115688 |  25.1 | 471M|-1.413545e+04 |-1.298144e+04 |   8.89%
   4600 |  4533 |115845 |  24.6 | 476M|-1.413545e+04 |-1.298144e+04 |   8.89%
  node  | left  |LP iter|LP it/n| mem |  dualbound   | primalbound  |  gap   
   4700 |  4633 |116022 |  24.1 | 481M|-1.413545e+04 |-1.298144e+04 |   8.89%
   4800 |  4733 |116186 |  23.7 | 486M|-1.413545e+04 |-1.298144e+04 |   8.89%
   4900 |  4833 |116352 |  23.2 | 491M|-1.413545e+04 |-1.298144e+04 |   8.89%
   5000 |  4933 |116535 |  22.8 | 496M|-1.413545e+04 |-1.298144e+04 |   8.89%
   5100 |  5033 |116684 |  22.4 | 542M|-1.413545e+04 |-1.298144e+04 |   8.89%
   5200 |  5133 |116856 |  22.0 | 547M|-1.413545e+04 |-1.298144e+04 |   8.89%
   5300 |  5233 |117046 |  21.6 | 553M|-1.413545e+04 |-1.298144e+04 |   8.89%
   5400 |  5333 |117210 |  21.2 | 558M|-1.413545e+04 |-1.298144e+04 |   8.89%
   5500 |  5433 |117395 |  20.9 | 563M|-1.413545e+04 |-1.298144e+04 |   8.89%
q  5560 |  5493 |117501 |  20.7 | 566M|-1.413545e+04 |-1.299358e+04 |   8.79%
y  5561 |  5492 |117501 |  20.7 | 566M|-1.413545e+04 |-1.299358e+04 |   8.79%
   5600 |  5533 |117550 |  20.5 | 568M|-1.413545e+04 |-1.299358e+04 |   8.79%
   5700 |  5633 |117750 |  20.2 | 574M|-1.413545e+04 |-1.299358e+04 |   8.79%
   5800 |  5733 |117915 |  19.9 | 579M|-1.413545e+04 |-1.299358e+04 |   8.79%
   5900 |  5833 |118092 |  19.6 | 584M|-1.413545e+04 |-1.299358e+04 |   8.79%
  node  | left  |LP iter|LP it/n| mem |  dualbound   | primalbound  |  gap   
   6000 |  5933 |118269 |  19.3 | 589M|-1.413545e+04 |-1.299358e+04 |   8.79%
   6100 |  6033 |118450 |  19.0 | 594M|-1.413545e+04 |-1.299358e+04 |   8.79%
   6200 |  6133 |118636 |  18.7 | 648M|-1.413545e+04 |-1.299358e+04 |   8.79%
   6300 |  6233 |118792 |  18.4 | 653M|-1.413545e+04 |-1.299358e+04 |   8.79%
   6400 |  6333 |118981 |  18.2 | 658M|-1.413545e+04 |-1.299358e+04 |   8.79%
   6500 |  6433 |119149 |  17.9 | 664M|-1.413545e+04 |-1.299358e+04 |   8.79%
   6600 |  6533 |119343 |  17.7 | 669M|-1.413545e+04 |-1.299358e+04 |   8.79%
   6700 |  6633 |119518 |  17.5 | 674M|-1.413545e+04 |-1.299358e+04 |   8.79%
   6800 |  6733 |119702 |  17.2 | 679M|-1.413545e+04 |-1.299358e+04 |   8.79%
   6900 |  6833 |119889 |  17.0 | 684M|-1.413545e+04 |-1.299358e+04 |   8.79%
   7000 |  6933 |120032 |  16.8 | 689M|-1.413545e+04 |-1.299358e+04 |   8.79%
   7100 |  7033 |120239 |  16.6 | 695M|-1.413545e+04 |-1.299358e+04 |   8.79%
   7200 |  7133 |120406 |  16.4 | 700M|-1.413545e+04 |-1.299358e+04 |   8.79%
   7300 |  7233 |120602 |  16.2 | 705M|-1.413545e+04 |-1.299358e+04 |   8.79%
   7400 |  7333 |120779 |  16.0 | 769M|-1.413545e+04 |-1.299358e+04 |   8.79%
  node  | left  |LP iter|LP it/n| mem |  dualbound   | primalbound  |  gap   
   7500 |  7433 |120965 |  15.8 | 774M|-1.413545e+04 |-1.299358e+04 |   8.79%
   7600 |  7533 |121153 |  15.6 | 779M|-1.413545e+04 |-1.299358e+04 |   8.79%
   7700 |  7633 |121297 |  15.4 | 784M|-1.413545e+04 |-1.299358e+04 |   8.79%
   7800 |  7733 |121506 |  15.2 | 789M|-1.413545e+04 |-1.299358e+04 |   8.79%
   7900 |  7833 |121674 |  15.1 | 795M|-1.413545e+04 |-1.299358e+04 |   8.79%
   8000 |  7933 |121872 |  14.9 | 800M|-1.413545e+04 |-1.299358e+04 |   8.79%
   8100 |  8033 |122050 |  14.7 | 805M|-1.413545e+04 |-1.299358e+04 |   8.79%
   8200 |  8133 |122238 |  14.6 | 810M|-1.413545e+04 |-1.299358e+04 |   8.79%
   8300 |  8233 |122427 |  14.4 | 815M|-1.413545e+04 |-1.299358e+04 |   8.79%
   8400 |  8333 |122586 |  14.3 | 820M|-1.413545e+04 |-1.299358e+04 |   8.79%
   8500 |  8433 |122781 |  14.1 | 826M|-1.413545e+04 |-1.299358e+04 |   8.79%
   8600 |  8533 |122951 |  14.0 | 831M|-1.413545e+04 |-1.299358e+04 |   8.79%
   8700 |  8633 |123151 |  13.9 | 836M|-1.413545e+04 |-1.299358e+04 |   8.79%
   8800 |  8733 |123330 |  13.7 | 911M|-1.413545e+04 |-1.299358e+04 |   8.79%
   8900 |  8833 |123520 |  13.6 | 916M|-1.413545e+04 |-1.299358e+04 |   8.79%
  node  | left  |LP iter|LP it/n| mem |  dualbound   | primalbound  |  gap   
   9000 |  8933 |123696 |  13.5 | 922M|-1.413545e+04 |-1.299358e+04 |   8.79%
   9100 |  9033 |123863 |  13.3 | 927M|-1.413545e+04 |-1.299358e+04 |   8.79%
   9200 |  9133 |124069 |  13.2 | 932M|-1.413545e+04 |-1.299358e+04 |   8.79%
q  9210 |  9143 |124089 |  13.2 | 933M|-1.413545e+04 |-1.300765e+04 |   8.67%
y  9211 |  9142 |124089 |  13.2 | 933M|-1.413545e+04 |-1.300765e+04 |   8.67%
q  9211 |     0 |124090 |  13.2 | 461M|-1.413076e+04 |-1.413545e+04 |   0.03%

SCIP Status        : problem is solved [optimal solution found]
Solving Time (sec) : 174.71
Solving Nodes      : 9211
Primal Bound       : -1.41354495631985e+04 (20 solutions)
Dual Bound         : -1.41354495631985e+04
Gap                : 0.00 %
No. of first stage variables  2
No. of second stage variables 13
No. of second stage constraints 9
No. of scenarios  1000
No. of total variables 11002
No. of total constraints 9000
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
first:  [1,2]
preprocessSto:   0.470686231 (s)
preprocess:   2.110769098 (s)
Optimal
result
[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,3.0,3.0,3.0,1.0,-15.0]
U:   -14135.449764864201
extensive:   0.972267499 (s)
preprocessex:   0.655502099 (s)
 iter  left  lev   bVarId       bvlb             bvub             LB              UB            gap   
relax:   1.03737106 (s)
remaining 1   -1.0e10
1      0      1                                        -10000000000.0000 -1.4135e+04    99.9999 % 
before feasibility reduction [0.0,0.0]   [1.0,1.0]
Sto_fast_feasibility_reduction:   4.138927544 (s)
optimality_reduction_range:   1.162195878 (s)
finish medium reduction
left_OBBT_all   0.49959621374075935
after initial feasibility reduction [0.277082,0.308918]   [1.0,1.0]     time:   5.730775183 (s)
1    0.27708153016912945    1.0
A [0.518054,0.308918]     [0.759027,1.0]
B [0.518054,0.308918]     [0.759027,1.0]false
after feasibility reduction [0.518054,0.308918]   [0.759027,1.0]
probing time:   4.892975034 (s)false
all node solved
Solution time:   10.782867772 (s)
solved nodes:  1
1                                                     -1.4278e+04    -1.4135e+04    1.0000  % 
first stage sol   [1.0,1.0]
WARNING: NLP resolve is now enabled by default. The EnableNLPResolve() method will be removed in a future release.
WARNING: The curly syntax (sum{},prod{},norm2{}) is deprecated in favor of the new generator syntax (sum(),prod(),norm()).
WARNING: Replace sum{qcoeffs[definedB[j]] * definedBilinearVars[j],j in 1:length(definedB)} with sum(qcoeffs[definedB[j]] * definedBilinearVars[j] for j in 1:length(definedB)).
WARNING: Replace sum{qcoeffs[newB[j]] * bilinearVars_local_con[j],j in 1:length(newB)} with sum(qcoeffs[newB[j]] * bilinearVars_local_con[j] for j in 1:length(newB)).
WARNING: A variable named x is already attached to this model. If creating variables programmatically, consider using the anonymous variable syntax x = @variable(m, [1:N], ...).
WARNING: A variable named bilinear is already attached to this model. If creating variables programmatically, consider using the anonymous variable syntax x = @variable(m, [1:N], ...).
WARNING: Not solved to optimality, status: Infeasible
WARNING: Not solved to optimality, status: Infeasible
WARNING: Not solved to optimality, status: Infeasible
ERROR: LoadError: Unrecognized expression x[1].
 in spliceref(::JuMP.Model, ::Expr) at /home/cao27/.julia/v0.5/JuMP/src/parsenlp.jl:242
 in map(::JuMP.##148#149{JuMP.Model}, ::Array{Any,1}) at ./essentials.jl:124
 in spliceref(::JuMP.Model, ::Expr) at /home/cao27/.julia/v0.5/JuMP/src/parsenlp.jl:244
 in map(::JuMP.##148#149{JuMP.Model}, ::Array{Any,1}) at ./essentials.jl:124
 in spliceref(::JuMP.Model, ::Expr) at /home/cao27/.julia/v0.5/JuMP/src/parsenlp.jl:244
 in JuMP.NonlinearExprData(::JuMP.Model, ::Expr) at /home/cao27/.julia/v0.5/JuMP/src/parsenlp.jl:233
 in setNLobjective(::JuMP.Model, ::Symbol, ::Expr) at /home/cao27/.julia/v0.5/JuMP/src/nlp.jl:1338
 in copyNLModel(::JuMP.Model) at /home/cao27/SINGO/Plasmo.jl/src/Plasmo.jl:808
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/cao27/SINGO/Global/2_1_3, in expression starting on line 47

